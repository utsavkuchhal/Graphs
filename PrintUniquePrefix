import java.util.*;

public class RoundRobin {
	public static void main(String args[]) {
		String arr[] = { "zebra", "dog", "duck", "dove" };
		int n = arr.length;
		Trie trie = new Trie();
		for (int i = 0; i < arr.length; i++) {
			trie.insert(arr[i]);
		}

		String[] ans = new String[arr.length];
		for (int i = 0; i < arr.length; i++) {
			System.out.println(trie.findPrefix(arr[i]));
		}

	}

	static class Trie {
		Node root;

		int count = 0;

		public Trie() {
			this.root = new Node('\0', 0);
			count = 0;
		}

		void insert(String s) {
			Node temp = root;
			for (int i = 0; i < s.length(); i++) {
				char c = s.charAt(i);
				if (temp.children.containsKey(c)) {
					temp = temp.children.get(c);
					temp.freq = temp.freq + 1;
				} else {
					Node n = new Node(c, 1);
					temp.children.put(c, n);
					temp = n;
				}
			}

			temp.terminal = true;
		}

		String findPrefix(String s) {
			Node temp = root;
			String prefix = "";
			for (int i = 0; i < s.length(); i++) {
				char c = s.charAt(i);
				if (!temp.children.containsKey(c)) {
					return "-1";
				} else {
					if (temp.freq == 1 && temp != root) {
						return prefix;
					}
					prefix += c;
					temp = temp.children.get(c);
				}
			}
			return prefix;
		}

		void printTrie() {
			Node temp = root;
			printTrieUtil(temp);
		}

		void printTrieUtil(Node root) {
			System.out.println("data -> " + root.data + " freq -> " + root.freq);

			for (char c : root.children.keySet()) {
				Node node = root.children.get(c);
				printTrieUtil(node);
			}
		}

		boolean find(String s) {
			Node temp = root;
			for (int i = 0; i < s.length(); i++) {
				char c = s.charAt(i);
				if (!temp.children.containsKey(c)) {
					return false;
				} else {
					temp = temp.children.get(c);

				}
			}
			return temp.terminal;
		}
	}

	static class Node {
		char data;
		int freq;
		HashMap<Character, Node> children;
		boolean terminal;

		public Node(char data, int freq) {
			this.data = data;
			this.children = new HashMap<Character, Node>();
			this.terminal = false;
			this.freq = 1;
		}
	}
}
